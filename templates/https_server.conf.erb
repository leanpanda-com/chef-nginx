server {
  listen 443 ssl<%= @default_server ? " default_server" : "" %>;
  listen [::]:443 ssl<%= @default_server ? " default_server" : "" %>;
<%- if @default_server %>
  server_name _;
<%- else %>
  server_name <%= @domain %>;
<%- end %>

<%- if @logging %>
  access_log /var/log/nginx/<%= @domain %>_access.log;
  error_log /var/log/nginx/<%= @domain %>_error.log;
<%- end %>

  # Dynamic handler for issuing or returning certs for SNI domains.
  ssl_certificate_by_lua_block {
    auto_ssl:ssl_certificate()
  }

  ssl_certificate <%= @ssl_certificate_path %>;
  ssl_certificate_key <%= @ssl_key_path %>;

  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
  ssl_prefer_server_ciphers on;

<%-
@extras.each do |extra|
%>
<%= extra %>
<%-
end
%>

<%-
@proxies.each do |upstream, paths|
  paths.each do |path|
%>
  location <%= path %> {
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto https;
    proxy_set_header Host $http_host;
    proxy_redirect off;

    if (!-f $request_filename) {
      proxy_pass http://<%= upstream %>;
      break;
    }
  }
<%-
  end
end
%>
}
